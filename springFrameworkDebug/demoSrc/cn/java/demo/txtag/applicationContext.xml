<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="    
    http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
    http://www.springframework.org/schema/tx           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">
	
    <!-- *********** 事务管理器 bof *********** -->
    <bean id="transactionManagerx" class="cn.java.demo.txtag.mock.transactionmanager.MinePlatformTransactionManager">
        <property name="connectionUrl">
            <value type="java.lang.String"><![CDATA[jdbc:mysql://127.0.0.1:3306/rap_db?useSSL=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true]]></value>
        </property>
        <property name="username" value="root" />
        <property name="password" value="123456" />
    </bean>
    
    <!-- *********** 居于注解识别 bof ***********  -->
    <tx:annotation-driven transaction-manager="transactionManagerx" mode="proxy" />
   	<bean id="fooOneByAnnotaionService" class="cn.java.demo.txtag.bean.byannotation.service.FooOneByAnnotaionService" />
    <!-- *********** 居于注解识别 eof ***********  -->
   
    <!-- *********** 居于XML识别 bof ***********  -->
    <tx:advice id="advice0" transaction-manager="transactionManagerx">
        <tx:attributes>
            <!-- MineRuntimeException的子类异常都回滚，除了MineSubOneRuntimeException异常的不回滚 -->
            <tx:method name="testException*"  rollback-for="cn.java.demo.txtag.exception.MineRuntimeException,cn.java.demo.txtag.exception.MineRuntimeException" 
                	no-rollback-for="cn.java.demo.txtag.exception.MineSubOneRuntimeException,cn.java.demo.txtag.exception.MineSubOneRuntimeException"/> <!-- rollback-for和no-rollback-for，会依次匹配父类名的特征，谁最接近本类谁优先级较高  -->
            <tx:method name="find*"   propagation="NOT_SUPPORTED" isolation="REPEATABLE_READ" timeout="-1" read-only="true" /> <!-- propagation="NOT_SUPPORTED" 如果支持事务就使用事务执行，如果不支持事务就使用非事务执行 -->
            <tx:method name="insert*" propagation="REQUIRED" isolation="REPEATABLE_READ" timeout="10" read-only="false" /> <!-- propagation="REQUIRED" 如果存在事务就使用，如果不存在就创建 -->
            <tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ" timeout="-1" read-only="false" />
            <tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ" timeout="-1" read-only="false" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pointcutRule0" expression="execution(* cn.java.demo.txtag.bean.byxml.service..*.*(..))"/>
        <aop:advisor pointcut-ref="pointcutRule0" advice-ref="advice0"/>
    </aop:config>
    <bean id="fooOneByXmlService" class="cn.java.demo.txtag.bean.byxml.service.FooOneByXmlService" />
    <!-- *********** 居于XML识别 eof ***********  -->
     
</beans>  