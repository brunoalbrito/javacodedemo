<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="    
    http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
    http://www.springframework.org/schema/jms	http://www.springframework.org/schema/jms/spring-jms-4.2.xsd">
    <!-- ***************生产者*****bof****************** -->
	
    <bean id="producerFactory"	class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
        <constructor-arg index="0" name="configs">
            <bean id="producerProperties" class="java.util.HashMap">
		        <constructor-arg>
		            <map>
		                <entry key="bootstrap.servers" value="localhost:7000" />
		                <entry key="group.id" value="0" />
		                <entry key="retries" value="1" />
		                <entry key="batch.size" value="16384" />
		                <entry key="linger.ms" value="1" />
		                <entry key="buffer.memory" value="33554432" />
		                <entry key="key.serializer"
		                value="org.apache.kafka.common.serialization.StringSerializer" />
		                <entry key="value.serializer"
		                value="org.apache.kafka.common.serialization.StringSerializer" />
		            </map>
		        </constructor-arg>
		    </bean>
        </constructor-arg>
    </bean>
    <bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
        <constructor-arg ref="producerFactory" />
        <constructor-arg name="autoFlush" value="true" />
        
        <property name="defaultTopic" value="defaultTopic" />
        <property name="producerListener">
        	<bean class="cn.java.demo.jmstag.kafka.producerlistener.KafkaProducerSendCallback" />
        </property>
    </bean>
    <!-- ***************生产者*****eof****************** -->
    <!-- 自定义Bean  -->
    <bean id="kafkaProducerService" class="cn.java.demo.jmstag.kafka.producorservice.KafkaProducerService" />
    
    
    <!-- ***************消费者*****bof****************** -->
    <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
         <constructor-arg index="0" name="configs">
	         <bean class="java.util.HashMap">
		         <constructor-arg>
		             <map>
		                 <entry key="bootstrap.servers" value="127.0.0.1:7000"/>
		                 <entry key="group.id" value="0"/>
		                 <entry key="enable.auto.commit" value="false"/>
		                 <entry key="auto.commit.interval.ms" value="1000"/>
		                 <entry key="session.timeout.ms" value="15000"/>
		                 <entry key="key.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
		                 <entry key="value.deserializer" value="org.apache.kafka.common.serialization.StringDeserializer"/>
		             </map>
		         </constructor-arg>
		     </bean>
         </constructor-arg>
     </bean>
     <bean id="kafkaMessageListenerContainer" class="org.springframework.kafka.listener.KafkaMessageListenerContainer" 
     	init-method="doStart"><!-- 在context启动后，会自动启动 -->
         <constructor-arg index="0" name="consumerFactory" ref="consumerFactory" />
         <constructor-arg index="1" name="containerProperties">
         	<bean class="org.springframework.kafka.listener.config.ContainerProperties">
		         <constructor-arg index="0" name="topics" value="topic0" />
		         <property name="messageListener">
		         	<bean class=" cn.java.demo.jmstag.kafka.consumer.KafkaConsumer" />
		         </property>
		    </bean>
         </constructor-arg>
     </bean>
    <!-- ***************消费者*****eof****************** -->
    
    
</beans>  