/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/@VERSION@
 * Generated at: 2017-04-16 16:18:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.io.IOException;
import javax.servlet.jsp.JspWriter;
import cn.java.demo.bean.JspPageBean;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "i am '/test/jsp/index.jsp'";
  }


// 
static {
	System.out.println("static block...\n");
}
// declaration method1
public void method1(){
	System.out.println("method1 Declarations1...\n");
}


// declaration method2 定义方法
public String method2(){
	 return "method2...\n";
}
//declaration method3 定义方法
public static void method3(){
	 System.out.println("method3 Declarations...\n");
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/taglib/janchou-taglib.tld", Long.valueOf(1492359023392L));
    _jspx_dependants.put("/WEB-INF/jsp/common/header.jsp", Long.valueOf(1492357406939L));
    _jspx_dependants.put("/WEB-INF/jsp/common/banner.jsp", Long.valueOf(1492278102821L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintStream");
    _jspx_imports_classes.add("javax.servlet.jsp.JspWriter");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.io.IOException");
    _jspx_imports_classes.add("cn.java.demo.bean.JspPageBean");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmyprefix_005fecho_0026_005fstr_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005ftimeZone_005fformat_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fmyprefix_005fecho_0026_005fstr_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005ftimeZone_005fformat_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fmyprefix_005fecho_0026_005fstr_005fnobody.release();
    _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005ftimeZone_005fformat_005fnobody.release();
    _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 注释 bof -->\r\n");
      out.write("<!-- 注释 eof -->\r\n");
      out.write("\r\n");
 out.write("Hello World test JSP ..."); 
      out.write("<br />\r\n");
      out.write("\r\n");
      out.write("<!-- -------------------------- JSP页面的指令 bof（非xml写法、xml写法） --------------------------  -->\r\n");
      out.write("<!-- 1.《指令page》，支持的属性检查在，org.apache.jasper.compiler.Validator.DirectiveVisitor.visit(PageDirective n)  -->\r\n");
      out.write("<!-- 《指令page》，使用import属性 -->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 《指令page》，使用info属性 -->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 2.《指令include》，对属性的校验在，org.apache.jasper.compiler.Validator.DirectiveVisitor.visit(IncludeDirective n)  -->\r\n");
      out.write("<!-- 《指令include》（静态引入，即：代码会拷贝在一起） -->\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"zh-CN\"  xml:lang=\"zh-CN\">\r\n");
      out.write("<head>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 out.write("this is header <br />"); 
      out.write("<br />\r\n");
 out.write("this is banner <br />"); 
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("\t3.《指令taglib》，声明myprefix前缀对应的库信息\r\n");
      out.write("\tmyprefix ----- http://cn.java.janchou/jsp/core(web.xml) -----　/WEB-INF/taglib/janchou-taglib.tld\r\n");
      out.write("-->\r\n");
      out.write("<!-- -------------------------- 指令 eof--------------------------  -->\r\n");
      out.write("\r\n");
      out.write("<!-- -------------------------- 非指令 bof（非xml写法、xml写法）--------------------------  -->\r\n");
      out.write("<!-- 1.《声明代码块》 bof-->\r\n");
      out.write("<!-- 《声明代码块》 eof-->\r\n");
      out.write(" \r\n");
      out.write("<!-- 2.《表达式》  bof-->\r\n");
      out.print(request.getAttribute("username")  );
      out.write("<br />\r\n");
      out.print(this.method2() /* 调用方法 */ );
      out.write("<br />\r\n");
      out.print("hello world"  );
      out.write("<br />\r\n");
      out.print("hello world");
      out.write("<!-- 《表达式》  eof-->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 3.《脚本 》 bof-->\r\n");
 out.write("i am scriptlet ...");  
      out.write("<br />\r\n");
out.write("i am scriptlet ...");
      out.write("<!-- 《脚本》  eof-->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 4.《文本标签》  bof--> \r\n");
      out.write("jsp:text...\r\n");
      out.write("jsp:text...<!-- 《文本标签 》 eof-->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 5.《EL表达式》 $ { } bof-->\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageScope.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${applicationScope.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${header[\"User-Agent\"]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cookie.userCountry}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.method}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br />\r\n");
      out.write(" \r\n");
      out.write("<!-- 《EL表达式》 $ { }  eof-->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 6.《保留表达式》 # { }  bof-->\r\n");
      out.write("<!-- \r\n");
      out.write("\tdeferred-syntax-allowed-as-literal=true时，下面的语法是可以合法的（但不做任何执行，可获取jsp渲染结果，再用模板引擎进行渲染）\r\n");
      out.write("\tdeferred-syntax-allowed-as-literal=false时，# { } 是el表达式，但是在做el解析的时候，又回抛出异常，这是tomcat的bug\r\n");
      out.write("\tJSP 2.1规范对JSP 2.0和Java Server Faces 1.1中的表达式语言进行了统一。\r\n");
      out.write("\t在JSP 2.1中，字符序列 # {被保留给表达式语言使用，你不能在模板本中使用字符序列 # {。\r\n");
      out.write("\t如果JSP页面运行在JSP 2.1之前版本的容器中，则没有这个限制。\r\n");
      out.write("\t对于JSP 2.1的容器，如果在模板文本中需要出现字符序列 # {，那么可以将该属性设置为true。\r\n");
      out.write("-->\r\n");
      out.write("#{param.username}<br />\r\n");
      out.write("#{pageScope.username}<br />\r\n");
      out.write("#{requestScope.username}<br />\r\n");
      out.write("#{sessionScope.username}<br />\r\n");
      out.write("#{applicationScope.username}<br />\r\n");
      out.write("#{header[\"User-Agent\"]}<br />\r\n");
      out.write("#{cookie.userCountry}<br />\r\n");
      out.write("#{pageContext.request.method} <br />\r\n");
      out.write("<!-- 《保留表达式》 # { }  eof-->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 7.《JSP页面的行为》  bof-->\r\n");
      out.write("<!--\r\n");
      out.write("\t 行为代码的解析：org.apache.jasper.compiler.Parser.parseStandardAction(Node parent) \r\n");
      out.write("\t 行为代码的校验：org.apache.jasper.compiler.Validator.ValidateVisitor.visit(IncludeAction n)\r\n");
      out.write("\t 行为代码的生成：org.apache.jasper.compiler.Generator.GenerateVisitor.visit(IncludeAction n) \r\n");
      out.write("-->\r\n");
      out.write("<br />\r\n");
      out.write("<!-- 【动态引入行为】 即：代码不会拷贝在一起，是动态执行\r\n");
      out.write("解析结果为：org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, \"/WEB-INF/jsp/common/menu.jsp\" + \"?\" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(\"param1\", request.getCharacterEncoding())+ \"=\" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(\"value1\", request.getCharacterEncoding()), out, true);\r\n");
      out.write("-->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/jsp/common/menu.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("param1", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("value1", request.getCharacterEncoding()), out, false);
      out.write("<br />\r\n");
      out.write("<!-- 【跳转行为】\r\n");
      out.write("解析结果为：pageContext.forward(\"/jsp/index.jsp\" + \"?\" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(\"forword_param1\", request.getCharacterEncoding())+ \"=\" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(\"forword_param1_value\", request.getCharacterEncoding()));\r\n");
      out.write("-->\r\n");
 if(request.getParameter("forword_param1")==null){ 
      if (true) {
        _jspx_page_context.forward("/jsp/index.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("forword_param1", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("forword_param1_value", request.getCharacterEncoding()));
        return;
      }
 }else{ 
      out.print(request.getParameter("forword_param1") );
 } 
      out.write("<br />\r\n");
      out.write("<!-- 【jsp:useBean、jsp:setProperty、jsp:getProperty的使用】\r\n");
      out.write("< jsp:useBean>解析结果为：\r\n");
      out.write("\tcn.java.note.bean.JspPageBean bean1InRequest = null;\r\n");
      out.write("    bean1InRequest = (cn.java.note.bean.JspPageBean) _jspx_page_context.getAttribute(\"bean1InRequest\", javax.servlet.jsp.PageContext.REQUEST_SCOPE);\r\n");
      out.write("    if (bean1InRequest == null){\r\n");
      out.write("      bean1InRequest = new cn.java.note.bean.JspPageBean();\r\n");
      out.write("      _jspx_page_context.setAttribute(\"bean1InRequest\", bean1InRequest, javax.servlet.jsp.PageContext.REQUEST_SCOPE);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("< jsp:setProperty>解析结果为： （检查顺序是：1、pageContext==page 2、request 3、session 4、ApplicationContextFacade==application）\r\n");
      out.write("      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute(\"bean1InRequest\"), \"username\", \"this is username1\", null, null, false);\r\n");
      out.write("\r\n");
      out.write("< jsp:getProperty>解析结果为：（检查顺序是：1、pageContext==page 2、request 3、session 4、ApplicationContextFacade==application）\r\n");
      out.write("\tout.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((cn.java.note.bean.JspPageBean)_jspx_page_context.findAttribute(\"bean1InRequest\")).getUsername())));\r\n");
      out.write("-->\r\n");
      cn.java.demo.bean.JspPageBean bean1InPage = null;
      bean1InPage = (cn.java.demo.bean.JspPageBean) _jspx_page_context.getAttribute("bean1InPage", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (bean1InPage == null){
        bean1InPage = new cn.java.demo.bean.JspPageBean();
        _jspx_page_context.setAttribute("bean1InPage", bean1InPage, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      cn.java.demo.bean.JspPageBean bean1InRequest = null;
      bean1InRequest = (cn.java.demo.bean.JspPageBean) _jspx_page_context.getAttribute("bean1InRequest", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (bean1InRequest == null){
        bean1InRequest = new cn.java.demo.bean.JspPageBean();
        _jspx_page_context.setAttribute("bean1InRequest", bean1InRequest, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      cn.java.demo.bean.JspPageBean bean1InSession = null;
      synchronized (session) {
        bean1InSession = (cn.java.demo.bean.JspPageBean) _jspx_page_context.getAttribute("bean1InSession", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (bean1InSession == null){
          bean1InSession = new cn.java.demo.bean.JspPageBean();
          _jspx_page_context.setAttribute("bean1InSession", bean1InSession, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      cn.java.demo.bean.JspPageBean bean1InApplication = null;
      synchronized (application) {
        bean1InApplication = (cn.java.demo.bean.JspPageBean) _jspx_page_context.getAttribute("bean1InApplication", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (bean1InApplication == null){
          bean1InApplication = new cn.java.demo.bean.JspPageBean();
          _jspx_page_context.setAttribute("bean1InApplication", bean1InApplication, javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        }
      }
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("bean1InRequest"), "username", "this is username1", null, null, false);
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((cn.java.demo.bean.JspPageBean)_jspx_page_context.findAttribute("bean1InRequest")).getUsername())));
      out.write("<!-- 【jsp:plugin的使用】\r\n");
      out.write("解析结果为：\r\n");
      out.write("\t  java.lang.String _jspx_temp0 = \"100\";\r\n");
      out.write("      java.lang.String _jspx_temp1 = \"100\";\r\n");
      out.write("      out.write(\"<object classid=\\\"clsid:8AD9C840-044E-11D1-B3E9-00805F499D93\\\" name=\\\"\\\"\" + \" width=\\\"\" + _jspx_temp0 + \"\\\"\" + \" height=\\\"\" + _jspx_temp1 + \"\\\"\" + \" hspace=\\\"\\\" vspace=\\\"\\\" align=\\\"\\\" codebase=\\\"\\\">\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"<param name=\\\"java_code\\\" value=\\\"\\\">\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"<param name=\\\"java_codebase\\\" value=\\\"\\\">\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"<param name=\\\"java_archive\\\" value=\\\"\\\">\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"<param name=\\\"type\\\" value=\\\"application/x-java-applet;version=\\\">\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write( \"<param name=\\\"param1\\\" value=\\\"\" + \"value1\" + \"\\\">\" );\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"<comment>\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"<EMBED type=\\\"application/x-java-applet;version=\\\" name=\\\"\\\"\" + \" width=\\\"\" + _jspx_temp0 + \"\\\"\" + \" height=\\\"\" + _jspx_temp1 + \"\\\"\" + \" hspace=\\\"\\\" vspace=\\\"\\\" align=\\\"\\\" pluginspage=\\\"\\\" java_code=\\\"\\\" java_codebase=\\\"\\\" java_archive=\\\"\\\"\");\r\n");
      out.write("      out.write( \" param1=\\\"\" + \"value1\" + \"\\\"\" );\r\n");
      out.write("      out.write(\"/>\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"<noembed>\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"fallback....\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"</noembed>\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"</comment>\");\r\n");
      out.write("      out.write(\"\\n\");\r\n");
      out.write("      out.write(\"</object>\");\r\n");
      out.write("生成的HTML代码：\t\r\n");
      out.write("\t<object classid=\"clsid:8AD9C840-044E-11D1-B3E9-00805F499D93\" name=\"\" width=\"100\" height=\"100\" hspace=\"\" vspace=\"\" align=\"\" codebase=\"\">\r\n");
      out.write("\t\t<param name=\"java_code\" value=\"\">\r\n");
      out.write("\t\t<param name=\"java_codebase\" value=\"\">\r\n");
      out.write("\t\t<param name=\"java_archive\" value=\"\">\r\n");
      out.write("\t\t<param name=\"type\" value=\"application/x-java-applet;version=\">\r\n");
      out.write("\t\t<param name=\"param1\" value=\"value1\">\r\n");
      out.write("\t\t<comment>\r\n");
      out.write("\t\t\t<EMBED type=\"application/x-java-applet;version=\" name=\"\" width=\"100\" height=\"100\" hspace=\"\" vspace=\"\" align=\"\" pluginspage=\"\" java_code=\"\" java_codebase=\"\" java_archive=\"\" param1=\"value1\"/>\r\n");
      out.write("\t\t\t<noembed>\r\n");
      out.write("\t\t\t\tfallback....\r\n");
      out.write("\t\t\t</noembed>\r\n");
      out.write("\t\t</comment>\r\n");
      out.write("\t</object>\r\n");
      out.write("-->\r\n");
      java.lang.String _jspx_temp0 = "100";
      java.lang.String _jspx_temp1 = "100";
      out.write("<object classid=\"clsid:8AD9C840-044E-11D1-B3E9-00805F499D93\" name=\"\"" + " width=\"" + _jspx_temp0 + "\"" + " height=\"" + _jspx_temp1 + "\"" + " hspace=\"\" vspace=\"\" align=\"\" codebase=\"\">");
      out.write("\n");
      out.write("<param name=\"java_code\" value=\"\">");
      out.write("\n");
      out.write("<param name=\"java_codebase\" value=\"\">");
      out.write("\n");
      out.write("<param name=\"java_archive\" value=\"\">");
      out.write("\n");
      out.write("<param name=\"type\" value=\"application/x-java-applet;version=\">");
      out.write("\n");
      out.write( "<param name=\"param1\" value=\"" + "value1" + "\">" );
      out.write("\n");
      out.write("<comment>");
      out.write("\n");
      out.write("<EMBED type=\"application/x-java-applet;version=\" name=\"\"" + " width=\"" + _jspx_temp0 + "\"" + " height=\"" + _jspx_temp1 + "\"" + " hspace=\"\" vspace=\"\" align=\"\" pluginspage=\"\" java_code=\"\" java_codebase=\"\" java_archive=\"\"");
      out.write( " param1=\"" + "value1" + "\"" );
      out.write("/>");
      out.write("\n");
      out.write("<noembed>");
      out.write("\n");
      out.write("fallback....");
      out.write("\n");
      out.write("</noembed>");
      out.write("\n");
      out.write("</comment>");
      out.write("\n");
      out.write("</object>");
      out.write("\n");
      out.write("<!-- 【jsp:element的使用】\r\n");
      out.write("解析结果为：   \r\n");
      out.write("\tjava.lang.String _jspx_temp2 = \"attribute1Value\";\r\n");
      out.write("\tjava.lang.String _jspx_temp3 = \"attribute2Value\";\r\n");
      out.write("\tout.write(\"<\" + \"element1\" + \" attribute2=\\\"\" + _jspx_temp3 + \"\\\"\" + \" attribute1=\\\"\" + _jspx_temp2 + \"\\\"\" + \">\");\r\n");
      out.write("\tjava.lang.String _jspx_temp4 = \"attribute1Value\";\r\n");
      out.write("\tjava.lang.String _jspx_temp5 = \"attribute2Value\";\r\n");
      out.write("\tout.write(\"<\" + \"element1Sub1\" + \" attribute2=\\\"\" + _jspx_temp5 + \"\\\"\" + \" attribute1=\\\"\" + _jspx_temp4 + \"\\\"\" + \"/>\");\r\n");
      out.write("\tout.write(\"</\" + \"element1\" + \">\"); \r\n");
      out.write("生成的HTML代码：\t\r\n");
      out.write("\t<element1 attribute2=\"attribute2Value\" attribute1=\"attribute1Value\"><element1Sub1 attribute2=\"attribute2Value\" attribute1=\"attribute1Value\"/></element1>\r\n");
      out.write("-->\r\n");
      java.lang.String _jspx_temp2 = "attribute1Value";
      java.lang.String _jspx_temp3 = "attribute2Value";
      out.write("<" + "element1" + " attribute2=\"" + _jspx_temp3 + "\"" + " attribute1=\"" + _jspx_temp2 + "\"" + ">");
      java.lang.String _jspx_temp4 = "attribute1Value";
      java.lang.String _jspx_temp5 = "attribute2Value";
      out.write("<" + "element1Sub1" + " attribute2=\"" + _jspx_temp5 + "\"" + " attribute1=\"" + _jspx_temp4 + "\"" + "/>");
      out.write("</" + "element1" + ">");
      out.write("<!-- 《行为》  eof-->\r\n");
      out.write("<br /><br />\r\n");
      out.write("\r\n");
      out.write("<!-- 《自定义标签》  bof-->\r\n");
      if (_jspx_meth_myprefix_005fecho_005f0(_jspx_page_context))
        return;
      out.write("<br />\r\n");
      if (_jspx_meth_myprefix_005fdate_005f0(_jspx_page_context))
        return;
      out.write("<br />\r\n");
      if (_jspx_meth_myprefix_005fdate_005f1(_jspx_page_context))
        return;
      out.write("<br />\r\n");
      if (_jspx_meth_myprefix_005fdate_005f2(_jspx_page_context))
        return;
      out.write("<br />\r\n");
      out.write("<!-- 《自定义标签》  eof-->\r\n");
      out.write("<br /><br />\r\n");
      out.write("<!-- -------------------------- 非指令 eof--------------------------  -->\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_myprefix_005fecho_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  myprefix:echo
    cn.java.demo.tag.EchoTag _jspx_th_myprefix_005fecho_005f0 = (cn.java.demo.tag.EchoTag) _005fjspx_005ftagPool_005fmyprefix_005fecho_0026_005fstr_005fnobody.get(cn.java.demo.tag.EchoTag.class);
    _jspx_th_myprefix_005fecho_005f0.setPageContext(_jspx_page_context);
    _jspx_th_myprefix_005fecho_005f0.setParent(null);
    // /jsp/index.jsp(254,0) name = str type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fecho_005f0.setStr("hello tag...");
    int _jspx_eval_myprefix_005fecho_005f0 = _jspx_th_myprefix_005fecho_005f0.doStartTag();
    if (_jspx_th_myprefix_005fecho_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmyprefix_005fecho_0026_005fstr_005fnobody.reuse(_jspx_th_myprefix_005fecho_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fmyprefix_005fecho_0026_005fstr_005fnobody.reuse(_jspx_th_myprefix_005fecho_005f0);
    return false;
  }

  private boolean _jspx_meth_myprefix_005fdate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  myprefix:date
    cn.java.demo.tag.DateTag _jspx_th_myprefix_005fdate_005f0 = (cn.java.demo.tag.DateTag) _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005ftimeZone_005fformat_005fnobody.get(cn.java.demo.tag.DateTag.class);
    _jspx_th_myprefix_005fdate_005f0.setPageContext(_jspx_page_context);
    _jspx_th_myprefix_005fdate_005f0.setParent(null);
    // /jsp/index.jsp(255,0) name = timestamp type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fdate_005f0.setTimestamp(1472065970l);
    // /jsp/index.jsp(255,0) name = format type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fdate_005f0.setFormat("yyyy-MM-dd HH:mm:ss");
    // /jsp/index.jsp(255,0) name = timeZone type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fdate_005f0.setTimeZone("PRC");
    int _jspx_eval_myprefix_005fdate_005f0 = _jspx_th_myprefix_005fdate_005f0.doStartTag();
    if (_jspx_th_myprefix_005fdate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005ftimeZone_005fformat_005fnobody.reuse(_jspx_th_myprefix_005fdate_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005ftimeZone_005fformat_005fnobody.reuse(_jspx_th_myprefix_005fdate_005f0);
    return false;
  }

  private boolean _jspx_meth_myprefix_005fdate_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  myprefix:date
    cn.java.demo.tag.DateTag _jspx_th_myprefix_005fdate_005f1 = (cn.java.demo.tag.DateTag) _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody.get(cn.java.demo.tag.DateTag.class);
    _jspx_th_myprefix_005fdate_005f1.setPageContext(_jspx_page_context);
    _jspx_th_myprefix_005fdate_005f1.setParent(null);
    // /jsp/index.jsp(256,0) name = timestamp type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fdate_005f1.setTimestamp(1472065970l);
    // /jsp/index.jsp(256,0) name = format type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fdate_005f1.setFormat("yyyy-MM-dd HH:mm:ss");
    int _jspx_eval_myprefix_005fdate_005f1 = _jspx_th_myprefix_005fdate_005f1.doStartTag();
    if (_jspx_th_myprefix_005fdate_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody.reuse(_jspx_th_myprefix_005fdate_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody.reuse(_jspx_th_myprefix_005fdate_005f1);
    return false;
  }

  private boolean _jspx_meth_myprefix_005fdate_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  myprefix:date
    cn.java.demo.tag.DateTag _jspx_th_myprefix_005fdate_005f2 = (cn.java.demo.tag.DateTag) _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody.get(cn.java.demo.tag.DateTag.class);
    _jspx_th_myprefix_005fdate_005f2.setPageContext(_jspx_page_context);
    _jspx_th_myprefix_005fdate_005f2.setParent(null);
    // /jsp/index.jsp(257,0) name = timestamp type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fdate_005f2.setTimestamp(1472065970l);
    // /jsp/index.jsp(257,0) name = format type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_myprefix_005fdate_005f2.setFormat("yyyy-MM-dd");
    int _jspx_eval_myprefix_005fdate_005f2 = _jspx_th_myprefix_005fdate_005f2.doStartTag();
    if (_jspx_th_myprefix_005fdate_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody.reuse(_jspx_th_myprefix_005fdate_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005fmyprefix_005fdate_0026_005ftimestamp_005fformat_005fnobody.reuse(_jspx_th_myprefix_005fdate_005f2);
    return false;
  }
}
