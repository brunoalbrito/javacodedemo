<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd" >
<hibernate-mapping  package="" schema="" catalog="" default-cascade="" default-access="" default-lazy="" auto-import="">
	<meta inherit="true" attribute="name0">
	<meta inherit="true" attribute="name1">
	
	<filter-def name="name" condition="defaultCondition">
		<filter-param name="paramName0" type="paramType0" />
		<filter-param name="paramName1" type="paramType1" />
	</filter-def>
	
	<fetch-profile name="profileName">
 		<fetch association="association" style="style" entity="entityName0"></fetch>
 		<fetch association="association" style="style" entity="entityName1"></fetch>
 	</fetch-profile>
 	
 	<identifier-generator name="strategy" class="generatorClassName" />
 	
 	<typedef name="typeName" class="typeClass">
 		<param name=""></param>
 		<param name=""></param>
 	</typedef>
	
	<!-- 1 -->
 	<class lazy="false" entity-name="cn.java.demo.all.jpa.demo.entity.Student" name="cn.java.demo.all.jpa.demo.entity.Student" 
 			proxy="bindPojoRepresentationX" node="bindDom4jRepresentationX" 
	 		discriminator-value="getEntityName" dynamic-update="true" dynamic-insert="true"
	 		batch-size="10" select-before-update="false" optimistic-lock="version" persister=""
	 		abstract="false"
	 		schema="" catalog="" table="student" 
	 		mutable="true" 
 			where="" check="" polymorphism="explicit" rowid="">
 			
 		<tuplizer entity-mode="pojo" class="" />
 		<tuplizer entity-mode="pojo" class="" />
 		<tuplizer entity-mode="dynamic-map" class="" />
 		<tuplizer entity-mode="dynamic-map" class="" />
 		
 		<fetch-profile name="profileName">
	 		<fetch association="association" style="style" entity="entityName"></fetch>
	 		<fetch association="association" style="style" entity="entityName"></fetch>
	 	</fetch-profile>
 		<fetch-profile name="profileName">
	 		<fetch association="association" style="style" entity="entityName"></fetch>
	 		<fetch association="association" style="style" entity="entityName"></fetch>
	 	</fetch-profile>
	 	
 		<sql-insert callable="true" check="rowcount">insert table1(field1,field2) VALUES("field1_value0","field2_value0"),("field1_value1","field2_value1")</sql-insert>
 		<sql-delete callable="true" check="rowcount">delete form table where id=?</sql-delete>
 		<sql-update callable="true" check="rowcount">update table1 set field1="field1_value_new"</sql-update>
 		<loader query-ref="" />
 		
 		<synchronize table=""></synchronize>
 		<synchronize table=""></synchronize>
 		
 		<meta inherit="true" attribute="name0">
		<meta inherit="true" attribute="name1">

		<subselect></subselect>
		
 		<comment>注释</comment>
 		
 		<id name="userid" type=""  foreign-key="" unique="" index="" unique-key="" unsaved-value="">
 			<type name="">
 				<param name=""></param>
 				<param name=""></param>
 			</type>
 			<column length="" scale="" precision="" not-null="" unique="" check="" default="" 
 				sql-type="" write="" read=""  name="" index="" unique-key="" />
 				<comment></comment>
 			</column>
 			<column length="" scale="" precision="" not-null="" unique="" check="" default="" 
 				sql-type="" write="" read="" name="" index="" unique-key="" />
 				<comment></comment>
 			</column>
 			<formula></formula>
 			<formula></formula>
			<generator class="native">
				<param name=""></param>
 				<param name=""></param>
			</generator>
		</id>
		
 		<composite-id name="" class="" node="" name="" unique="true">
 			<meta inherit="true" attribute="name0">
			<meta inherit="true" attribute="name1">
			
			<map|set|list|bag|idbag|array|primitive-array inverse="" mutable="" optimistic-lock="" order-by="" where="" batch-size="" 
				node="" name="" embed-xml="" persister="" collection-type="" fetch="subselect" 
				outer-join="" lazy="" table="" schema="" catalog="" sort="unsorted" cascade="" mapped="">
				<one-to-many></one-to-many>
				<comment></comment>
				
				<filter name="" condition="" autoAliasInjection="" >
			 		<aliases alias="" table="" />
			 		<aliases alias="" table="" />
			 	</filter><filter name="" condition="" autoAliasInjection="" >
			 		<aliases alias="" table="" />
			 		<aliases alias="" table="" />
			 	</filter>
			 	
			 	<synchronize table=""></synchronize>
			 	<synchronize table=""></synchronize>
			 	
			 	<loader query-ref="" />
			 	<loader query-ref="" />
			 	
			 	<key property-ref="" />
			</map|set|list|bag|idbag|array|primitive-array>
			
			<many-to-one></many-to-one>
			<key-many-to-one></key-many-to-one>
			<one-to-one></one-to-one>
			<any></any>
			<property></property>
			<key-property></key-property>
			<component></component>
			<dynamic-component></dynamic-component>
			<nested-composite-element></nested-composite-element>
			<parent></parent>
			<tuplizer entity-mode="pojo" class="" />
 			<tuplizer entity-mode="pojo" class="" />
 		</composite-id>
 		
 		<version name=""></version>
 		
 		<timestamp name="" source="no_db"></timestamp>
 		
 		<discriminator></discriminator>
 		
 		<cache usage="" region="" include="non-lazy" />
 		
 		<many-to-one formula="" fetch="" outer-join="" lazy="" property-ref="" embed-xml=""
			not-found="" foreign-key="" cascade="">
		</many-to-one>
 		<any type="" meta-type="">
	 		<meta-value value="" class=""></meta-value>
	 		<column length="" scale="" precision="" not-null="" unique="" check="" default="" 
 				sql-type="" write="" read=""  name="" index="" unique-key="" />
 				<comment></comment>
 			</column>
	 	</any>
 		<one-to-one constrained="" fetch="" outer-join="" lazy="" embed-xml="" foreign-key=""
 			property-ref="" name="" entity-name="" cascade="delete-orphan">
 			<column length="" scale="" precision="" not-null="" unique="" check="" default="" 
 				sql-type="" write="" read=""  name="" index="" unique-key="" />
 				<comment></comment>
 			</column>
 			<column length="" scale="" precision="" not-null="" unique="" check="" default="" 
 				sql-type="" write="" read=""  name="" index="" unique-key="" />
 				<comment></comment>
 			</column>
 		</one-to-one>
 		<property name="name" />
		<property name="age" />
		
 		<component />
 		<dynamic-component />
 		<properties />
 		<join />
 		
 		<!-- 四个标签bof -->
 		<class></class>
 		<subclass name="cn.java.demo.all.jpa.demo.entity.SubClazz"></subclass>
		<joined-subclass name="cn.java.demo.all.jpa.demo.entity.JoinedClazz"></joined-subclass>
		<union-subclass name="cn.java.demo.all.jpa.demo.entity.UnionClazz"></union-subclass>
		<!-- 四个标签eof -->
		
		<filter />
		<natural-id />
		<subclass />
		<query />
		<sql-query />
		<resultset />
 	</class>
	
	<subclass name="cn.java.demo.all.jpa.demo.entity.SubClazz" extends="" ></subclass>
	<joined-subclass name="cn.java.demo.all.jpa.demo.entity.JoinedClazz" extends="" ></joined-subclass>
	<union-subclass name="cn.java.demo.all.jpa.demo.entity.UnionClazz" extends="" ></union-subclass>
	
	<query></query>
	<sql-query />
	<resultset />
	<import />
	<database-object />
</hibernate-mapping>
